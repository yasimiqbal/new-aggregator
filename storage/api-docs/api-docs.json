{
    "openapi": "3.0.0",
    "info": {
        "title": "News Aggregator API",
        "description": "API documentation for News Aggregator application",
        "version": "1.0.0"
    },
    "paths": {
        "/api/articles": {
            "get": {
                "tags": [
                    "Articles"
                ],
                "summary": "Get all articles",
                "description": "Retrieve a paginated list of articles.",
                "operationId": "2e1e0fa8a08d7a20f2a29af4635e0227",
                "parameters": [
                    {
                        "name": "list_size",
                        "in": "query",
                        "description": "Number of articles per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of articles"
                    },
                    "500": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/articles/{id}": {
            "get": {
                "tags": [
                    "Articles"
                ],
                "summary": "Get an article by ID",
                "description": "Retrieve a specific article using its ID.",
                "operationId": "a49492cb51856a2825318378b6552d94",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the article",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Article retrieved successfully"
                    },
                    "404": {
                        "description": "Article not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Article not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve the article",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve the article"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/news/feed": {
            "get": {
                "tags": [
                    "News Feed"
                ],
                "summary": "Get user news feed",
                "description": "Retrieves a paginated list of articles based on the user's preferences.",
                "operationId": "31e89d1db58f5bc813f3a3d35a766903",
                "parameters": [
                    {
                        "name": "list_size",
                        "in": "query",
                        "description": "Number of articles per page (default: system-defined)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User articles retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User articles retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ArticleCollection"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No preferences found for this user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No preferences found for this user."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/preferences": {
            "get": {
                "tags": [
                    "Preferences"
                ],
                "summary": "Get user preferences",
                "description": "Retrieve the authenticated user along with their preferences.",
                "operationId": "518cdd273f618e7de147be8c4e021608",
                "parameters": [
                    {
                        "name": "list_size",
                        "in": "query",
                        "description": "Number of preferences per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User and preferences list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/UserResource"
                                        },
                                        "preferences": {
                                            "$ref": "#/components/schemas/PreferenceCollection"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Preferences"
                ],
                "summary": "Create user preferences",
                "description": "Store user preferences for sources, categories, and authors.",
                "operationId": "6fc6dcfd7b6814c58b2f307fde31845b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "sources",
                                    "categories",
                                    "authors"
                                ],
                                "properties": {
                                    "sources": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "BBC",
                                            "CNN"
                                        ]
                                    },
                                    "categories": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "Technology",
                                            "Health"
                                        ]
                                    },
                                    "authors": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "John Doe",
                                            "Jane Smith"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Preferences saved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/UserResource"
                                        },
                                        "preferences": {
                                            "$ref": "#/components/schemas/PreferenceCollection"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The sources field is required."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/preferences/{id}": {
            "get": {
                "tags": [
                    "Preferences"
                ],
                "summary": "Get a preference by ID",
                "description": "Retrieve a specific preference using its ID.",
                "operationId": "933bc9e7b0ab3479e49fa88d4fcf1fcb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the preference",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Preference retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreferenceResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Preference not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Preference not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Authenticate user and return a Bearer token.",
                "operationId": "c373bc4cffa4a56fc64e3979b8ee7b96",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "testuser@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User successfully logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "your_jwt_token_here"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3600
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "description": "Logs out the authenticated user.",
                "operationId": "5ff2dc8b48bff52908d3821a0ecc9b3e",
                "responses": {
                    "200": {
                        "description": "User successfully logged out"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/password/forgot": {
            "post": {
                "tags": [
                    "Password Reset"
                ],
                "summary": "Send password reset link",
                "description": "Sends a password reset link to the provided email address.",
                "operationId": "5d933724060b8dacfd62bae52510ca10",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "testuser@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset link sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset link sent successfully to your email address."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed to send password reset link"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Create a new user account and return user details.",
                "operationId": "748a1acc92fb3e56f8f6ace55b5a9d24",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Test user"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "testuser@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User Registered Successfully!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User Registered Successfully!"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/password/reset": {
            "post": {
                "tags": [
                    "Password Reset"
                ],
                "summary": "Reset user password",
                "description": "Resets the user's password using the provided token, email, and new password.",
                "operationId": "552a0d64d3a001d8545f1a08ac9fa506",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "token",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "token": {
                                        "type": "string",
                                        "example": "some-random-token"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "NewPassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "NewPassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid token or email"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ArticleCollection": {
                "title": "ArticleCollection",
                "description": "A collection of articles",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ArticleResource"
                        }
                    }
                },
                "type": "object"
            },
            "ArticleResource": {
                "title": "ArticleResource",
                "description": "Article resource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Breaking News: Laravel Updates"
                    },
                    "content": {
                        "type": "string",
                        "example": "Lorem ipsum dolor sit amet..."
                    },
                    "author": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "published_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-06T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "PreferenceCollection": {
                "title": "PreferenceCollection",
                "description": "A collection of user preferences",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PreferenceResource"
                        }
                    }
                },
                "type": "object"
            },
            "PreferenceResource": {
                "title": "PreferenceResource",
                "description": "User preference resource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Technology"
                    },
                    "source": {
                        "type": "string",
                        "example": "TechCrunch",
                        "nullable": true
                    },
                    "category": {
                        "type": "string",
                        "example": "Science",
                        "nullable": true
                    },
                    "author": {
                        "type": "string",
                        "example": "John Doe",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "UserCollection": {
                "title": "User Collection",
                "description": "A collection of user resources",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserResource"
                        }
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "title": "User Resource",
                "description": "User details",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    }
                },
                "type": "object"
            },
            "Article": {
                "title": "Article",
                "description": "Article model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Breaking News"
                    },
                    "description": {
                        "type": "string",
                        "example": "This is a breaking news article."
                    },
                    "url": {
                        "type": "string",
                        "format": "url",
                        "example": "https://example.com/article"
                    },
                    "category": {
                        "type": "string",
                        "example": "Technology"
                    },
                    "source": {
                        "type": "string",
                        "example": "Tech News"
                    },
                    "author": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "published_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-06 12:00:00"
                    }
                },
                "type": "object"
            },
            "Preference": {
                "title": "Preference",
                "description": "User preference settings",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "sources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "BBC",
                            "CNN"
                        ]
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "Technology",
                            "Health"
                        ]
                    },
                    "authors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "John Doe",
                            "Jane Smith"
                        ]
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "johndoe@example.com"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "apiKey",
                "name": "Authorization",
                "in": "header",
                "description": "Enter the token with the `Bearer ` prefix, e.g., \"Bearer <token>\""
            }
        }
    },
    "tags": [
        {
            "name": "Articles",
            "description": "API endpoints for managing articles"
        },
        {
            "name": "Preferences",
            "description": "API endpoints for user preferences"
        },
        {
            "name": "Authentication",
            "description": "Endpoints related to user authentication"
        },
        {
            "name": "Password Reset",
            "description": "Endpoints related to password reset"
        },
        {
            "name": "News Feed",
            "description": "News Feed"
        }
    ]
}